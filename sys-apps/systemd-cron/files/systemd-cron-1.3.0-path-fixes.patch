diff --git a/src/bin/crontab b/src/bin/crontab
index 5b95d32..e148582 100755
--- a/src/bin/crontab
+++ b/src/bin/crontab
@@ -1,6 +1,7 @@
 #!/usr/bin/python2
 
 import tempfile
+import stat
 import sys
 import os
 import argparse
@@ -8,7 +9,8 @@ import getpass
 
 EDITOR = (os.environ.get('EDITOR') or
 	  os.environ.get('VISUAL','/usr/bin/vim'))
-CRONTAB_DIR = '/var/spool/cron'
+CRONTAB_DIR = '/var/spool/cron/crontabs'
+CRONTAB_MODE = stat.S_IREAD | stat.S_IWRITE
 
 args_parser = argparse.ArgumentParser(description='maintain crontab files for individual users')
 
@@ -52,8 +54,9 @@ def confirm(message):
         return answer == 'y'
 
 def list(cron_file, args):
-    with open(cron_file, 'r') as f:
-        sys.stdout.write(f.read())
+    if os.path.exists(cron_file):
+        with open(cron_file, 'r') as f:
+            sys.stdout.write(f.read())
 
 def remove(cron_file, args):
     if not args.ask or confirm('Are you sure you want to delete %s (y/n)? ' % cron_file):
@@ -61,8 +64,9 @@ def remove(cron_file, args):
 
 def edit(cron_file, args):
     with tempfile.NamedTemporaryFile() as tmp:
-        with open(cron_file, 'r') as inp:
-            tmp.file.write(inp.read())
+        if os.path.exists(cron_file):
+            with open(cron_file, 'r') as inp:
+                tmp.file.write(inp.read())
 
         tmp.file.flush()
 
@@ -93,3 +97,7 @@ if __name__ == '__main__':
 
     action(cron_file, args)
 
+    if os.path.exists(cron_file):
+        s = os.stat(cron_file)
+        if s.st_mode != CRONTAB_MODE:
+            os.chmod(cron_file, CRONTAB_MODE)
diff --git a/src/bin/systemd-crontab-generator b/src/bin/systemd-crontab-generator
index 6a40713..eb8c320 100755
--- a/src/bin/systemd-crontab-generator
+++ b/src/bin/systemd-crontab-generator
@@ -14,7 +14,7 @@ envvar_re = re.compile(r'^([A-Za-z_0-9]+)\s*=\s*(.*)$')
 
 CRONTAB_FILES = ['/etc/crontab'] + files('/etc/cron.d')
 ANACRONTAB_FILES = ['/etc/anacrontab']
-USERCRONTAB_FILES = files('/var/spool/cron')
+USERCRONTAB_FILES = files('/var/spool/cron/crontabs')
 
 TARGER_DIR = sys.argv[1]
 TIMERS_DIR = os.path.join(TARGER_DIR, 'cron.target.wants')
