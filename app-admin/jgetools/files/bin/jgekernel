#!/bin/bash

MIRROR=${MIRROR:-https://kernel.org/pub/linux/kernel}
PROPKG=${PROPKG:-sys-kernel/vanilla-sources}
SRCDIR=${SRCDIR:-/usr/src}

JGELIBDIR=${JGELIBDIR:-/usr/share/jgetools}
source "${JGELIBDIR}/common.sh"
set -e

VERSION="${1}"
MAKEDIR="${SRCDIR}/linux-${VERSION}"

lnorcp() {
    PREFIX=$(dirname "${2}")
    ln -sf "${1}" "${2}" 2>/dev/null || cp "${PREFIX}/${1}" "${2}"
}

isrpi() {
    grep -q '^CONFIG_RASPBERRYPI_FIRMWARE=[my]$' "${MAKEDIR}/.config"
}

kver() {
    basename $(eselect kernel show | tail -1) | cut -d- -f2
}

kusage() {
    jge_log_error "${1} <version> [upgrade|compile|install|cleanup]..."
}

kupgrade() {
    TARFILE="linux-${VERSION}.tar.xz"
    TARURL="${MIRROR}/v${VERSION%%.*}.x/${TARFILE}"

    wget -cO "${SRCDIR}/${TARFILE}" "${TARURL}"
    tar xf "${SRCDIR}/${TARFILE}" -C "${SRCDIR}"
    rm -f "${SRCDIR}/${TARFILE}"

    cp "/boot/config-$(kver)" "${MAKEDIR}/.config"
    make -C "${MAKEDIR}" oldconfig
    jge_log_notice "make any configuration changes before compiling"
}

kcompile() {
    if ! [ -e "${MAKEDIR}" ]; then
        jge_log_error "source directory missing"
    fi

    make -C "${MAKEDIR}" clean
    make -C "${MAKEDIR}" ${MAKEOPTS}
}

kinstall() {
    if ! [ -e "${MAKEDIR}" ]; then
        jge_log_error "source directory missing"
    fi

    IMAGE=$(find "${MAKEDIR}/arch" -name bzImage -o -name zImage | head -1)

    if isrpi; then
        mkdir -p /boot
        "${MAKEDIR}/scripts/mkknlimg" \
            "${IMAGE}" \
            "/boot/vmlinuz-${VERSION}"
    else
        install -DTm 0644 \
            "${IMAGE}" \
            "/boot/vmlinuz-${VERSION}"
    fi

    rm -rf /boot/*.dtb /boot/overlays/*.dtbo
    find "${MAKEDIR}/arch" -name '*.dtb' \
        -exec install -Dm 0644 -t /boot {} \;
    find "${MAKEDIR}/arch" -name '*.dtbo' \
        -exec install -Dm 0644 -t /boot/overlays {} \;

    install -DTm 0644 \
        "${MAKEDIR}/.config" \
        "/boot/config-${VERSION}"
    install -DTm 0644 \
        "${MAKEDIR}/System.map" \
        "/boot/System.map-${VERSION}"

    lnorcp "config-${VERSION}" /boot/config
    lnorcp "System.map-${VERSION}" /boot/System.map
    lnorcp "vmlinuz-${VERSION}" /boot/vmlinuz

    make -C "${MAKEDIR}" modules_install
    PROFILE="/etc/portage/profile/package.provided"

    if [ -e "${PROFILE}" ]; then
        sed -i "\|^${PROPKG}-$(kver)\$|d" "${PROFILE}"
    fi

    mkdir -p $(dirname "${PROFILE}")
    echo "${PROPKG}-${VERSION}" >> "${PROFILE}"

    eselect kernel set "linux-${VERSION}"
    emerge -v1 @module-rebuild
    jge_log_notice "do not forget to update the bootloader"
}

kcleanup() {
    if [ "$(kver)" != "${VERSION}" ]; then
        jge_log_error "install before cleaning"
    fi

    find /boot -maxdepth 1 -depth \
        -type f -a ! -name "*-${VERSION}" -a \
        \( \
            -name "config-*" -o \
            -name "vmlinuz-*" -o \
            -name "System.map-*" \
        \) -exec rm -i {} \;

    find /lib/modules -maxdepth 1 -depth \
        -type d -a \
            ! -name "${VERSION}" -a \
            ! -name "modules" \
        -exec rm -Ir {} \;

    find "${SRCDIR}" -maxdepth 1 -depth \
        -type d -a \
            ! -name "linux-${VERSION}" -a \
            ! -name "src" \
        -exec rm -Ir {} \;
}

jge_require_user root
[ -z "${1}" ] && kusage "${0}"

for ACTION in ${@:2}; do
    case "${ACTION}" in
        upgrade|compile|install|cleanup) ;;
        *) kusage "${0}" ;;
    esac
done

for ACTION in ${@:2}; do
    case "${ACTION}" in
        upgrade) kupgrade ;;
        compile) kcompile ;;
        install) kinstall ;;
        cleanup) kcleanup ;;
    esac
done
